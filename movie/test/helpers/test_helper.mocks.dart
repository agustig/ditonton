// Mocks generated by Mockito 5.3.2 from annotations
// in movie/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i15;
import 'dart:convert' as _i27;
import 'dart:typed_data' as _i28;
import 'dart:ui' as _i24;

import 'package:core/core.dart' as _i21;
import 'package:core/data/datasources/db/database_helper.dart' as _i14;
import 'package:dartz/dartz.dart' as _i3;
import 'package:http/http.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/data/datasources/movie_local_data_source.dart' as _i19;
import 'package:movie/data/datasources/movie_remote_data_source.dart' as _i17;
import 'package:movie/data/models/movie_detail_model.dart' as _i2;
import 'package:movie/data/models/movie_model.dart' as _i18;
import 'package:movie/data/models/movie_table.dart' as _i20;
import 'package:movie/domain/entities/movie.dart' as _i22;
import 'package:movie/domain/entities/movie_detail.dart' as _i10;
import 'package:movie/domain/repositories/movie_repository.dart' as _i4;
import 'package:movie/domain/usecases/get_movie_detail.dart' as _i5;
import 'package:movie/domain/usecases/get_movie_recommendations.dart' as _i6;
import 'package:movie/domain/usecases/get_popular_movies.dart' as _i11;
import 'package:movie/domain/usecases/get_top_rated_movies.dart' as _i12;
import 'package:movie/domain/usecases/get_watchlist_status.dart' as _i7;
import 'package:movie/domain/usecases/remove_watchlist.dart' as _i9;
import 'package:movie/domain/usecases/save_watchlist.dart' as _i8;
import 'package:movie/presentation/provider/movie_detail_notifier.dart' as _i23;
import 'package:movie/presentation/provider/popular_movies_notifier.dart'
    as _i25;
import 'package:movie/presentation/provider/top_rated_movies_notifier.dart'
    as _i26;
import 'package:sqflite/sqflite.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetailResponse_0 extends _i1.SmartFake
    implements _i2.MovieDetailModel {
  _FakeMovieDetailResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieRepository_2 extends _i1.SmartFake
    implements _i4.MovieRepository {
  _FakeMovieRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMovieDetail_3 extends _i1.SmartFake
    implements _i5.GetMovieDetail {
  _FakeGetMovieDetail_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMovieRecommendations_4 extends _i1.SmartFake
    implements _i6.GetMovieRecommendations {
  _FakeGetMovieRecommendations_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatus_5 extends _i1.SmartFake
    implements _i7.GetWatchListStatus {
  _FakeGetWatchListStatus_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlist_6 extends _i1.SmartFake implements _i8.SaveWatchlist {
  _FakeSaveWatchlist_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlist_7 extends _i1.SmartFake
    implements _i9.RemoveWatchlist {
  _FakeRemoveWatchlist_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetail_8 extends _i1.SmartFake implements _i10.MovieDetail {
  _FakeMovieDetail_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularMovies_9 extends _i1.SmartFake
    implements _i11.GetPopularMovies {
  _FakeGetPopularMovies_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedMovies_10 extends _i1.SmartFake
    implements _i12.GetTopRatedMovies {
  _FakeGetTopRatedMovies_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_11 extends _i1.SmartFake implements _i13.Response {
  _FakeResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_12 extends _i1.SmartFake
    implements _i13.StreamedResponse {
  _FakeStreamedResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i14.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<_i16.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i15.Future<_i16.Database?>.value(),
      ) as _i15.Future<_i16.Database?>);
  @override
  _i15.Future<int> insertMovieToWatchlist(Map<String, dynamic>? movieJson) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertMovieToWatchlist,
          [movieJson],
        ),
        returnValue: _i15.Future<int>.value(0),
      ) as _i15.Future<int>);
  @override
  _i15.Future<int> removeMovieFromWatchlist(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMovieFromWatchlist,
          [movieId],
        ),
        returnValue: _i15.Future<int>.value(0),
      ) as _i15.Future<int>);
  @override
  _i15.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i15.Future<Map<String, dynamic>?>.value(),
      ) as _i15.Future<Map<String, dynamic>?>);
  @override
  _i15.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i15.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i15.Future<List<Map<String, dynamic>>>);
  @override
  _i15.Future<int> insertTvToWatchlist(Map<String, dynamic>? tvJson) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTvToWatchlist,
          [tvJson],
        ),
        returnValue: _i15.Future<int>.value(0),
      ) as _i15.Future<int>);
  @override
  _i15.Future<Map<String, dynamic>?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i15.Future<Map<String, dynamic>?>.value(),
      ) as _i15.Future<Map<String, dynamic>?>);
  @override
  _i15.Future<int> removeTvFromWatchlist(int? tvId) => (super.noSuchMethod(
        Invocation.method(
          #removeTvFromWatchlist,
          [tvId],
        ),
        returnValue: _i15.Future<int>.value(0),
      ) as _i15.Future<int>);
  @override
  _i15.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvs,
          [],
        ),
        returnValue: _i15.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i15.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i17.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<List<_i18.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue:
            _i15.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]),
      ) as _i15.Future<List<_i18.MovieModel>>);
  @override
  _i15.Future<List<_i18.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i15.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]),
      ) as _i15.Future<List<_i18.MovieModel>>);
  @override
  _i15.Future<List<_i18.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i15.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]),
      ) as _i15.Future<List<_i18.MovieModel>>);
  @override
  _i15.Future<_i2.MovieDetailModel> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i15.Future<_i2.MovieDetailModel>.value(_FakeMovieDetailResponse_0(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i15.Future<_i2.MovieDetailModel>);
  @override
  _i15.Future<List<_i18.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i15.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]),
      ) as _i15.Future<List<_i18.MovieModel>>);
  @override
  _i15.Future<List<_i18.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i15.Future<List<_i18.MovieModel>>.value(<_i18.MovieModel>[]),
      ) as _i15.Future<List<_i18.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i19.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<String> insertWatchlist(_i20.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i15.Future<String>.value(''),
      ) as _i15.Future<String>);
  @override
  _i15.Future<String> removeWatchlist(_i20.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i15.Future<String>.value(''),
      ) as _i15.Future<String>);
  @override
  _i15.Future<_i20.MovieTable?> getMovieById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i15.Future<_i20.MovieTable?>.value(),
      ) as _i15.Future<_i20.MovieTable?>);
  @override
  _i15.Future<List<_i20.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue:
            _i15.Future<List<_i20.MovieTable>>.value(<_i20.MovieTable>[]),
      ) as _i15.Future<List<_i20.MovieTable>>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i4.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingMovies,
              [],
            ),
            returnValue:
                _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                    _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
              this,
              Invocation.method(
                #getNowPlayingMovies,
                [],
              ),
            )),
          ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, _i10.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, _i10.MovieDetail>>.value(
                _FakeEither_1<_i21.Failure, _i10.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, _i10.MovieDetail>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieRecommendations,
              [id],
            ),
            returnValue:
                _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                    _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
              this,
              Invocation.method(
                #getMovieRecommendations,
                [id],
              ),
            )),
          ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
          this,
          Invocation.method(
            #searchMovies,
            [query],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, String>> saveWatchlist(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i15.Future<_i3.Either<_i21.Failure, String>>.value(
            _FakeEither_1<_i21.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, String>>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, String>> removeWatchlist(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i15.Future<_i3.Either<_i21.Failure, String>>.value(
            _FakeEither_1<_i21.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, String>>);
  @override
  _i15.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>
      getWatchlistMovies() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistMovies,
              [],
            ),
            returnValue:
                _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                    _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
              this,
              Invocation.method(
                #getWatchlistMovies,
                [],
              ),
            )),
          ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i5.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<_i3.Either<_i21.Failure, _i10.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, _i10.MovieDetail>>.value(
                _FakeEither_1<_i21.Failure, _i10.MovieDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, _i10.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i6.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i11.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i12.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>.value(
                _FakeEither_1<_i21.Failure, List<_i22.Movie>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, List<_i22.Movie>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i7.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i8.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<_i3.Either<_i21.Failure, String>> execute(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i15.Future<_i3.Either<_i21.Failure, String>>.value(
            _FakeEither_1<_i21.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i9.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.MovieRepository);
  @override
  _i15.Future<_i3.Either<_i21.Failure, String>> execute(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i15.Future<_i3.Either<_i21.Failure, String>>.value(
            _FakeEither_1<_i21.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i15.Future<_i3.Either<_i21.Failure, String>>);
}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i23.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetMovieDetail get getMovieDetail => (super.noSuchMethod(
        Invocation.getter(#getMovieDetail),
        returnValue: _FakeGetMovieDetail_3(
          this,
          Invocation.getter(#getMovieDetail),
        ),
      ) as _i5.GetMovieDetail);
  @override
  _i6.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getMovieRecommendations),
        returnValue: _FakeGetMovieRecommendations_4(
          this,
          Invocation.getter(#getMovieRecommendations),
        ),
      ) as _i6.GetMovieRecommendations);
  @override
  _i7.GetWatchListStatus get getWatchListStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListStatus),
        returnValue: _FakeGetWatchListStatus_5(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
      ) as _i7.GetWatchListStatus);
  @override
  _i8.SaveWatchlist get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlist_6(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i8.SaveWatchlist);
  @override
  _i9.RemoveWatchlist get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlist_7(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i9.RemoveWatchlist);
  @override
  _i10.MovieDetail get movie => (super.noSuchMethod(
        Invocation.getter(#movie),
        returnValue: _FakeMovieDetail_8(
          this,
          Invocation.getter(#movie),
        ),
      ) as _i10.MovieDetail);
  @override
  _i21.RequestState get movieState => (super.noSuchMethod(
        Invocation.getter(#movieState),
        returnValue: _i21.RequestState.empty,
      ) as _i21.RequestState);
  @override
  List<_i22.Movie> get movieRecommendations => (super.noSuchMethod(
        Invocation.getter(#movieRecommendations),
        returnValue: <_i22.Movie>[],
      ) as List<_i22.Movie>);
  @override
  _i21.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i21.RequestState.empty,
      ) as _i21.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i15.Future<void> fetchMovieDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchMovieDetail,
          [id],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> addWatchlist(_i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [movie],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> removeFromWatchlist(_i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [movie],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PopularMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularMoviesNotifier extends _i1.Mock
    implements _i25.PopularMoviesNotifier {
  MockPopularMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.GetPopularMovies get getPopularMovies => (super.noSuchMethod(
        Invocation.getter(#getPopularMovies),
        returnValue: _FakeGetPopularMovies_9(
          this,
          Invocation.getter(#getPopularMovies),
        ),
      ) as _i11.GetPopularMovies);
  @override
  _i21.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.RequestState.empty,
      ) as _i21.RequestState);
  @override
  List<_i22.Movie> get movies => (super.noSuchMethod(
        Invocation.getter(#movies),
        returnValue: <_i22.Movie>[],
      ) as List<_i22.Movie>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i15.Future<void> fetchPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularMovies,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TopRatedMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedMoviesNotifier extends _i1.Mock
    implements _i26.TopRatedMoviesNotifier {
  MockTopRatedMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.GetTopRatedMovies get getTopRatedMovies => (super.noSuchMethod(
        Invocation.getter(#getTopRatedMovies),
        returnValue: _FakeGetTopRatedMovies_10(
          this,
          Invocation.getter(#getTopRatedMovies),
        ),
      ) as _i12.GetTopRatedMovies);
  @override
  _i21.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.RequestState.empty,
      ) as _i21.RequestState);
  @override
  List<_i22.Movie> get movies => (super.noSuchMethod(
        Invocation.getter(#movies),
        returnValue: <_i22.Movie>[],
      ) as List<_i22.Movie>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i15.Future<void> fetchTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedMovies,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i13.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<_i13.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i15.Future<_i13.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i15.Future<_i13.Response>);
  @override
  _i15.Future<_i13.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i15.Future<_i13.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i15.Future<_i13.Response>);
  @override
  _i15.Future<_i13.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i15.Future<_i13.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i15.Future<_i13.Response>);
  @override
  _i15.Future<_i13.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i15.Future<_i13.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i15.Future<_i13.Response>);
  @override
  _i15.Future<_i13.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i15.Future<_i13.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i15.Future<_i13.Response>);
  @override
  _i15.Future<_i13.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i27.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i15.Future<_i13.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i15.Future<_i13.Response>);
  @override
  _i15.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i15.Future<String>.value(''),
      ) as _i15.Future<String>);
  @override
  _i15.Future<_i28.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i15.Future<_i28.Uint8List>.value(_i28.Uint8List(0)),
      ) as _i15.Future<_i28.Uint8List>);
  @override
  _i15.Future<_i13.StreamedResponse> send(_i13.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i15.Future<_i13.StreamedResponse>.value(_FakeStreamedResponse_12(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i15.Future<_i13.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
