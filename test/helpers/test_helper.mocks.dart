// Mocks generated by Mockito 5.3.2 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i19;
import 'dart:convert' as _i43;
import 'dart:typed_data' as _i44;
import 'dart:ui' as _i37;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i20;
import 'package:ditonton/common/state_enum.dart' as _i36;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i32;
import 'package:ditonton/data/datasources/movie_local_data_source.dart' as _i25;
import 'package:ditonton/data/datasources/movie_remote_data_source.dart'
    as _i23;
import 'package:ditonton/data/datasources/tv_local_data_source.dart' as _i30;
import 'package:ditonton/data/datasources/tv_remote_data_source.dart' as _i28;
import 'package:ditonton/data/models/movie_detail_model.dart' as _i3;
import 'package:ditonton/data/models/movie_model.dart' as _i24;
import 'package:ditonton/data/models/movie_table.dart' as _i26;
import 'package:ditonton/data/models/tv_detail_model.dart' as _i4;
import 'package:ditonton/data/models/tv_model.dart' as _i29;
import 'package:ditonton/data/models/tv_table.dart' as _i31;
import 'package:ditonton/domain/entities/movie.dart' as _i21;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i22;
import 'package:ditonton/domain/entities/tv.dart' as _i27;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i14;
import 'package:ditonton/domain/entities/tv_season.dart' as _i41;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i18;
import 'package:ditonton/domain/repositories/tv_repository.dart' as _i5;
import 'package:ditonton/domain/usecases/get_on_the_air_tvs.dart' as _i6;
import 'package:ditonton/domain/usecases/get_popular_tvs.dart' as _i7;
import 'package:ditonton/domain/usecases/get_top_rated_tvs.dart' as _i8;
import 'package:ditonton/domain/usecases/get_tv_detail.dart' as _i9;
import 'package:ditonton/domain/usecases/get_tv_recommendations.dart' as _i10;
import 'package:ditonton/domain/usecases/get_watchlist_movies.dart' as _i15;
import 'package:ditonton/domain/usecases/get_watchlist_tv_status.dart' as _i11;
import 'package:ditonton/domain/usecases/get_watchlist_tvs.dart' as _i16;
import 'package:ditonton/domain/usecases/remove_watchlist_tv.dart' as _i13;
import 'package:ditonton/domain/usecases/save_watchlist_tv.dart' as _i12;
import 'package:ditonton/domain/usecases/search_tvs.dart' as _i34;
import 'package:ditonton/presentation/provider/on_the_air_tvs_notifier.dart'
    as _i35;
import 'package:ditonton/presentation/provider/popular_tvs_notifier.dart'
    as _i38;
import 'package:ditonton/presentation/provider/top_rated_tvs_notifier.dart'
    as _i39;
import 'package:ditonton/presentation/provider/tv_detail_notifier.dart' as _i40;
import 'package:ditonton/presentation/provider/watchlist_notifier.dart' as _i42;
import 'package:http/http.dart' as _i17;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i33;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailModel_2 extends _i1.SmartFake implements _i4.TvDetailModel {
  _FakeTvDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvRepository_3 extends _i1.SmartFake implements _i5.TvRepository {
  _FakeTvRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnTheAirTvs_4 extends _i1.SmartFake
    implements _i6.GetOnTheAirTvs {
  _FakeGetOnTheAirTvs_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularTvs_5 extends _i1.SmartFake implements _i7.GetPopularTvs {
  _FakeGetPopularTvs_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedTvs_6 extends _i1.SmartFake
    implements _i8.GetTopRatedTvs {
  _FakeGetTopRatedTvs_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvDetail_7 extends _i1.SmartFake implements _i9.GetTvDetail {
  _FakeGetTvDetail_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvRecommendations_8 extends _i1.SmartFake
    implements _i10.GetTvRecommendations {
  _FakeGetTvRecommendations_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchlistTvStatus_9 extends _i1.SmartFake
    implements _i11.GetWatchlistTvStatus {
  _FakeGetWatchlistTvStatus_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTv_10 extends _i1.SmartFake
    implements _i12.SaveWatchlistTv {
  _FakeSaveWatchlistTv_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTv_11 extends _i1.SmartFake
    implements _i13.RemoveWatchlistTv {
  _FakeRemoveWatchlistTv_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetail_12 extends _i1.SmartFake implements _i14.TvDetail {
  _FakeTvDetail_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchlistMovies_13 extends _i1.SmartFake
    implements _i15.GetWatchlistMovies {
  _FakeGetWatchlistMovies_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchlistTvs_14 extends _i1.SmartFake
    implements _i16.GetWatchlistTvs {
  _FakeGetWatchlistTvs_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_15 extends _i1.SmartFake implements _i17.Response {
  _FakeResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_16 extends _i1.SmartFake
    implements _i17.StreamedResponse {
  _FakeStreamedResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i18.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingMovies,
              [],
            ),
            returnValue:
                _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                    _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
              this,
              Invocation.method(
                #getNowPlayingMovies,
                [],
              ),
            )),
          ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, _i22.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i19.Future<_i2.Either<_i20.Failure, _i22.MovieDetail>>.value(
                _FakeEither_0<_i20.Failure, _i22.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, _i22.MovieDetail>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieRecommendations,
              [id],
            ),
            returnValue:
                _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                    _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
              this,
              Invocation.method(
                #getMovieRecommendations,
                [id],
              ),
            )),
          ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
          this,
          Invocation.method(
            #searchMovies,
            [query],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, String>> saveWatchlist(
          _i22.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, String>>.value(
            _FakeEither_0<_i20.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, String>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, String>> removeWatchlist(
          _i22.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, String>>.value(
            _FakeEither_0<_i20.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, String>>);
  @override
  _i19.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>
      getWatchlistMovies() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistMovies,
              [],
            ),
            returnValue:
                _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                    _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
              this,
              Invocation.method(
                #getWatchlistMovies,
                [],
              ),
            )),
          ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i23.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<List<_i24.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue:
            _i19.Future<List<_i24.MovieModel>>.value(<_i24.MovieModel>[]),
      ) as _i19.Future<List<_i24.MovieModel>>);
  @override
  _i19.Future<List<_i24.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i19.Future<List<_i24.MovieModel>>.value(<_i24.MovieModel>[]),
      ) as _i19.Future<List<_i24.MovieModel>>);
  @override
  _i19.Future<List<_i24.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i19.Future<List<_i24.MovieModel>>.value(<_i24.MovieModel>[]),
      ) as _i19.Future<List<_i24.MovieModel>>);
  @override
  _i19.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i19.Future<_i3.MovieDetailResponse>.value(
            _FakeMovieDetailResponse_1(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i19.Future<_i3.MovieDetailResponse>);
  @override
  _i19.Future<List<_i24.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i19.Future<List<_i24.MovieModel>>.value(<_i24.MovieModel>[]),
      ) as _i19.Future<List<_i24.MovieModel>>);
  @override
  _i19.Future<List<_i24.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i19.Future<List<_i24.MovieModel>>.value(<_i24.MovieModel>[]),
      ) as _i19.Future<List<_i24.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i25.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<String> insertWatchlist(_i26.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<String> removeWatchlist(_i26.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<_i26.MovieTable?> getMovieById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i19.Future<_i26.MovieTable?>.value(),
      ) as _i19.Future<_i26.MovieTable?>);
  @override
  _i19.Future<List<_i26.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue:
            _i19.Future<List<_i26.MovieTable>>.value(<_i26.MovieTable>[]),
      ) as _i19.Future<List<_i26.MovieTable>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i15.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>.value(
                _FakeEither_0<_i20.Failure, List<_i21.Movie>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i21.Movie>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i5.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> getOnTheAirTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnTheAirTvs,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #getOnTheAirTvs,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> getPopularTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvs,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #getPopularTvs,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> getTopRatedTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvs,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #getTopRatedTvs,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, _i14.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, _i14.TvDetail>>.value(
            _FakeEither_0<_i20.Failure, _i14.TvDetail>(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, _i14.TvDetail>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #getTvRecommendations,
            [id],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> searchTvs(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvs,
          [query],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #searchTvs,
            [query],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, String>> saveWatchlist(
          _i14.TvDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, String>>.value(
            _FakeEither_0<_i20.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, String>>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, String>> removeTvWatchlist(
          _i14.TvDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTvWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, String>>.value(
            _FakeEither_0<_i20.Failure, String>(
          this,
          Invocation.method(
            #removeTvWatchlist,
            [movie],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, String>>);
  @override
  _i19.Future<bool> isAddedTvToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedTvToWatchlist,
          [id],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> getWatchlistTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvs,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #getWatchlistTvs,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i28.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<List<_i29.TvModel>> getOnTheAirTvs() => (super.noSuchMethod(
        Invocation.method(
          #getOnTheAirTvs,
          [],
        ),
        returnValue: _i19.Future<List<_i29.TvModel>>.value(<_i29.TvModel>[]),
      ) as _i19.Future<List<_i29.TvModel>>);
  @override
  _i19.Future<List<_i29.TvModel>> getPopularTvs() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTvs,
          [],
        ),
        returnValue: _i19.Future<List<_i29.TvModel>>.value(<_i29.TvModel>[]),
      ) as _i19.Future<List<_i29.TvModel>>);
  @override
  _i19.Future<List<_i29.TvModel>> getTopRatedTvs() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvs,
          [],
        ),
        returnValue: _i19.Future<List<_i29.TvModel>>.value(<_i29.TvModel>[]),
      ) as _i19.Future<List<_i29.TvModel>>);
  @override
  _i19.Future<_i4.TvDetailModel> getTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i19.Future<_i4.TvDetailModel>.value(_FakeTvDetailModel_2(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i19.Future<_i4.TvDetailModel>);
  @override
  _i19.Future<List<_i29.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i19.Future<List<_i29.TvModel>>.value(<_i29.TvModel>[]),
      ) as _i19.Future<List<_i29.TvModel>>);
  @override
  _i19.Future<List<_i29.TvModel>> searchTvs(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvs,
          [query],
        ),
        returnValue: _i19.Future<List<_i29.TvModel>>.value(<_i29.TvModel>[]),
      ) as _i19.Future<List<_i29.TvModel>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i30.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<String> insertTvWatchlist(_i31.TvTable? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTvWatchlist,
          [tv],
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<String> removeTvWatchlist(_i31.TvTable? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTvWatchlist,
          [tv],
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<_i31.TvTable?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i19.Future<_i31.TvTable?>.value(),
      ) as _i19.Future<_i31.TvTable?>);
  @override
  _i19.Future<List<_i31.TvTable>> getWatchlistTvs() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvs,
          [],
        ),
        returnValue: _i19.Future<List<_i31.TvTable>>.value(<_i31.TvTable>[]),
      ) as _i19.Future<List<_i31.TvTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i32.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<_i33.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i19.Future<_i33.Database?>.value(),
      ) as _i19.Future<_i33.Database?>);
  @override
  _i19.Future<int> insertMovieToWatchlist(_i26.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertMovieToWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<int> removeMovieFromWatchlist(_i26.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMovieFromWatchlist,
          [movie],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i19.Future<Map<String, dynamic>?>.value(),
      ) as _i19.Future<Map<String, dynamic>?>);
  @override
  _i19.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i19.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i19.Future<List<Map<String, dynamic>>>);
  @override
  _i19.Future<int> insertTvToWatchlist(_i31.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertTvToWatchlist,
          [tv],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<Map<String, dynamic>?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i19.Future<Map<String, dynamic>?>.value(),
      ) as _i19.Future<Map<String, dynamic>?>);
  @override
  _i19.Future<int> removeTvFromWatchlist(_i31.TvTable? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTvFromWatchlist,
          [tv],
        ),
        returnValue: _i19.Future<int>.value(0),
      ) as _i19.Future<int>);
  @override
  _i19.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvs,
          [],
        ),
        returnValue: _i19.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i19.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetOnTheAirTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTvs extends _i1.Mock implements _i6.GetOnTheAirTvs {
  MockGetOnTheAirTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [GetPopularTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTvs extends _i1.Mock implements _i7.GetPopularTvs {
  MockGetPopularTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [GetTopRatedTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvs extends _i1.Mock implements _i8.GetTopRatedTvs {
  MockGetTopRatedTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i9.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, _i14.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, _i14.TvDetail>>.value(
            _FakeEither_0<_i20.Failure, _i14.TvDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, _i14.TvDetail>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i10.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [SearchTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTvs extends _i1.Mock implements _i34.SearchTvs {
  MockSearchTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> execute(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [query],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #execute,
            [query],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [OnTheAirTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnTheAirTvsNotifier extends _i1.Mock
    implements _i35.OnTheAirTvsNotifier {
  MockOnTheAirTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetOnTheAirTvs get getOnTheAirTvs => (super.noSuchMethod(
        Invocation.getter(#getOnTheAirTvs),
        returnValue: _FakeGetOnTheAirTvs_4(
          this,
          Invocation.getter(#getOnTheAirTvs),
        ),
      ) as _i6.GetOnTheAirTvs);
  @override
  _i36.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i36.RequestState.empty,
      ) as _i36.RequestState);
  @override
  List<_i27.Tv> get tvList => (super.noSuchMethod(
        Invocation.getter(#tvList),
        returnValue: <_i27.Tv>[],
      ) as List<_i27.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> fetchOnTheAir() => (super.noSuchMethod(
        Invocation.method(
          #fetchOnTheAir,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PopularTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvsNotifier extends _i1.Mock
    implements _i38.PopularTvsNotifier {
  MockPopularTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.GetPopularTvs get getPopularTvs => (super.noSuchMethod(
        Invocation.getter(#getPopularTvs),
        returnValue: _FakeGetPopularTvs_5(
          this,
          Invocation.getter(#getPopularTvs),
        ),
      ) as _i7.GetPopularTvs);
  @override
  _i36.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i36.RequestState.empty,
      ) as _i36.RequestState);
  @override
  List<_i27.Tv> get tvList => (super.noSuchMethod(
        Invocation.getter(#tvList),
        returnValue: <_i27.Tv>[],
      ) as List<_i27.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> fetchPopularTvs() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularTvs,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TopRatedTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvsNotifier extends _i1.Mock
    implements _i39.TopRatedTvsNotifier {
  MockTopRatedTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetTopRatedTvs get getTopRatedTvs => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTvs),
        returnValue: _FakeGetTopRatedTvs_6(
          this,
          Invocation.getter(#getTopRatedTvs),
        ),
      ) as _i8.GetTopRatedTvs);
  @override
  _i36.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i36.RequestState.empty,
      ) as _i36.RequestState);
  @override
  List<_i27.Tv> get tvList => (super.noSuchMethod(
        Invocation.getter(#tvList),
        returnValue: <_i27.Tv>[],
      ) as List<_i27.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> fetchTopRatedTvs() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTvs,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GetWatchlistTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTvs extends _i1.Mock implements _i16.GetWatchlistTvs {
  MockGetWatchlistTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>.value(
            _FakeEither_0<_i20.Failure, List<_i27.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, List<_i27.Tv>>>);
}

/// A class which mocks [GetWatchlistTvStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTvStatus extends _i1.Mock
    implements _i11.GetWatchlistTvStatus {
  MockGetWatchlistTvStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
}

/// A class which mocks [SaveWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTv extends _i1.Mock implements _i12.SaveWatchlistTv {
  MockSaveWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, String>> execute(_i14.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, String>>.value(
            _FakeEither_0<_i20.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTv extends _i1.Mock implements _i13.RemoveWatchlistTv {
  MockRemoveWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.TvRepository);
  @override
  _i19.Future<_i2.Either<_i20.Failure, String>> execute(_i14.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i19.Future<_i2.Either<_i20.Failure, String>>.value(
            _FakeEither_0<_i20.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i19.Future<_i2.Either<_i20.Failure, String>>);
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i40.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.GetTvDetail get getTvDetail => (super.noSuchMethod(
        Invocation.getter(#getTvDetail),
        returnValue: _FakeGetTvDetail_7(
          this,
          Invocation.getter(#getTvDetail),
        ),
      ) as _i9.GetTvDetail);
  @override
  _i10.GetTvRecommendations get getTvRecommendations => (super.noSuchMethod(
        Invocation.getter(#getTvRecommendations),
        returnValue: _FakeGetTvRecommendations_8(
          this,
          Invocation.getter(#getTvRecommendations),
        ),
      ) as _i10.GetTvRecommendations);
  @override
  _i11.GetWatchlistTvStatus get getWatchlistTvStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchlistTvStatus),
        returnValue: _FakeGetWatchlistTvStatus_9(
          this,
          Invocation.getter(#getWatchlistTvStatus),
        ),
      ) as _i11.GetWatchlistTvStatus);
  @override
  _i12.SaveWatchlistTv get saveWatchlistTv => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTv),
        returnValue: _FakeSaveWatchlistTv_10(
          this,
          Invocation.getter(#saveWatchlistTv),
        ),
      ) as _i12.SaveWatchlistTv);
  @override
  _i13.RemoveWatchlistTv get removeWatchlistTv => (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTv),
        returnValue: _FakeRemoveWatchlistTv_11(
          this,
          Invocation.getter(#removeWatchlistTv),
        ),
      ) as _i13.RemoveWatchlistTv);
  @override
  _i14.TvDetail get tv => (super.noSuchMethod(
        Invocation.getter(#tv),
        returnValue: _FakeTvDetail_12(
          this,
          Invocation.getter(#tv),
        ),
      ) as _i14.TvDetail);
  @override
  _i36.RequestState get tvState => (super.noSuchMethod(
        Invocation.getter(#tvState),
        returnValue: _i36.RequestState.empty,
      ) as _i36.RequestState);
  @override
  List<_i27.Tv> get tvRecommendations => (super.noSuchMethod(
        Invocation.getter(#tvRecommendations),
        returnValue: <_i27.Tv>[],
      ) as List<_i27.Tv>);
  @override
  _i36.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i36.RequestState.empty,
      ) as _i36.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isTvAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isTvAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  bool isSeasonExpanded(_i41.TvSeason? season) => (super.noSuchMethod(
        Invocation.method(
          #isSeasonExpanded,
          [season],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> fetchTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvDetail,
          [id],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> fetchTvRecommendations(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvRecommendations,
          [id],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> expandSeason(_i41.TvSeason? season) => (super.noSuchMethod(
        Invocation.method(
          #expandSeason,
          [season],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void closeExpandedSeason() => super.noSuchMethod(
        Invocation.method(
          #closeExpandedSeason,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Future<void> addTvToWatchlist(_i14.TvDetail? tv) => (super.noSuchMethod(
        Invocation.method(
          #addTvToWatchlist,
          [tv],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> removeTvFromWatchlist(_i14.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTvFromWatchlist,
          [tv],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  _i19.Future<void> loadWatchlistTvStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistTvStatus,
          [id],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WatchlistNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistNotifier extends _i1.Mock implements _i42.WatchlistNotifier {
  MockWatchlistNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.GetWatchlistMovies get getWatchlistMovies => (super.noSuchMethod(
        Invocation.getter(#getWatchlistMovies),
        returnValue: _FakeGetWatchlistMovies_13(
          this,
          Invocation.getter(#getWatchlistMovies),
        ),
      ) as _i15.GetWatchlistMovies);
  @override
  _i16.GetWatchlistTvs get getWatchlistTvs => (super.noSuchMethod(
        Invocation.getter(#getWatchlistTvs),
        returnValue: _FakeGetWatchlistTvs_14(
          this,
          Invocation.getter(#getWatchlistTvs),
        ),
      ) as _i16.GetWatchlistTvs);
  @override
  List<_i21.Movie> get watchlistMovies => (super.noSuchMethod(
        Invocation.getter(#watchlistMovies),
        returnValue: <_i21.Movie>[],
      ) as List<_i21.Movie>);
  @override
  List<_i27.Tv> get watchlistTvs => (super.noSuchMethod(
        Invocation.getter(#watchlistTvs),
        returnValue: <_i27.Tv>[],
      ) as List<_i27.Tv>);
  @override
  _i36.RequestState get watchlistState => (super.noSuchMethod(
        Invocation.getter(#watchlistState),
        returnValue: _i36.RequestState.empty,
      ) as _i36.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i19.Future<void> fetchWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #fetchWatchlist,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
  @override
  void addListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i37.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i17.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<_i17.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<_i17.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i19.Future<_i17.Response>);
  @override
  _i19.Future<_i17.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<_i17.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i19.Future<_i17.Response>);
  @override
  _i19.Future<_i17.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i43.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i17.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i17.Response>);
  @override
  _i19.Future<_i17.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i43.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i17.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i17.Response>);
  @override
  _i19.Future<_i17.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i43.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i17.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i17.Response>);
  @override
  _i19.Future<_i17.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i43.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i17.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i17.Response>);
  @override
  _i19.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<String>.value(''),
      ) as _i19.Future<String>);
  @override
  _i19.Future<_i44.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<_i44.Uint8List>.value(_i44.Uint8List(0)),
      ) as _i19.Future<_i44.Uint8List>);
  @override
  _i19.Future<_i17.StreamedResponse> send(_i17.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i19.Future<_i17.StreamedResponse>.value(_FakeStreamedResponse_16(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i19.Future<_i17.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
